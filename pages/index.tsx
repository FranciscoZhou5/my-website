import Head from "next/head";
import {
  Box,
  Flex,
  Heading,
  Text,
  IconButton,
  HStack,
  Button,
  VStack,
  Card,
  CardHeader,
  CardBody,
  Grid,
  Progress,
  Divider,
  Popover,
  PopoverContent,
  PopoverTrigger,
  PopoverArrow,
  PopoverBody,
} from "@chakra-ui/react";
import NextImage from "next/image";
import Link from "next/link";

import { Link as ScrollLink, animateScroll as scroll } from "react-scroll";
import Header from "../components/Header";
import { AiFillGithub, AiOutlineInstagram } from "react-icons/ai";
import { BsChevronDown } from "react-icons/bs";
import BottomSlideFadeIn from "../components/animations/BottomSlideFadeIn";
import ScrollToTop from "../components/ScrollToTop";
import { useRef } from "react";

export default function Home() {
  const socialMedias = [
    { Icon: AiFillGithub, label: "Github", url: "https://github.com/FranciscoZhou5" },
    { Icon: AiOutlineInstagram, label: "Instagram", url: "https://www.instagram.com/franciscozhou5/" },
  ];

  const profileInfos = [
    { header: "Nome", body: "Francisco Zhou Liu" },
    // { header: "Nascimento", body: `12/04/2007 (${new Date().getFullYear() - 2007} anos)` },
    { header: "Nascimento", body: "12/04/2007" },
    { header: "Cargos", body: "Full-stack developer e Designer" },
    { header: "Email", body: "fg45874587@gmail.com" },
  ];

  const skills = [
    { name: "Typescript", value: 94 },
    // { name: "Javascript", value: 92 },
    // { name: "React", value: 93 },
    // { name: "Node.js", value: 81 },
    { name: "React", value: 92 },
    { name: "Figma", value: 82 },
    { name: "NodeJs", value: 87 },
  ];

  const initialSectionRef = useRef<HTMLDivElement>(null);
  const aboutMeSectionRef = useRef<HTMLDivElement>(null);

  const pageSections = [
    { section: "Initial", label: "Início", ref: initialSectionRef },
    { section: "AboutMe", label: "Sobre mim", ref: aboutMeSectionRef },
  ];

  return (
    <Box w="full" h="100vh">
      <Head>
        <title>Francisco Zhou Liu - Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>

      <Header sections={pageSections} />
      <ScrollToTop />

      <Box
        as="section"
        ref={initialSectionRef}
        pos="relative"
        w="full"
        textAlign="center"
        pt="140px"
        h={{ sm: "550px", md: "600px", lg: "750px" }}
      >
        <Box mb={{ sm: "16", lg: "80px" }}>
          {/* <BottomSlideFadeIn>
            <Heading size="md" color="primary" mb="2">
              Francisco Zhou
            </Heading>
          </BottomSlideFadeIn>
          <BottomSlideFadeIn>
            <Heading textAlign="center" fontWeight="medium" size={{ sm: "xl", md: "2xl", lg: "4xl" }} mx={{ sm: "0", md: "4" }}>
              Designer & Developer
            </Heading>
          </BottomSlideFadeIn>

          <BottomSlideFadeIn>
            <Text mt={{ sm: "0", md: "4" }} fontSize={{ sm: "medium", md: "large" }} color="#a1a1a1">
              Full-stack developer and UI/UX designer
            </Text>
          </BottomSlideFadeIn> */}
          <Heading size="md" color="primary" mb="2">
            Francisco Zhou
          </Heading>

          <Heading
            textAlign="center"
            fontWeight="medium"
            fontSize={{ sm: "28px", md: "48px", lg: "72px" }}
            // size={{ sm: "md", md: "2xl", lg: "4xl" }}
            mx={{ sm: "0", md: "4" }}
          >
            Designer & Developer
          </Heading>

          <Text mt={{ sm: "0", md: "4" }} fontSize={{ sm: "medium", md: "large" }} color="#a1a1a1">
            Full-stack developer and UI/UX designer
          </Text>
        </Box>

        <Box>
          <ScrollLink to="aboutme" smooth offset={-70}>
            <Button _hover={{ bgColor: "primary" }} borderColor="border" variant="outline" rightIcon={<BsChevronDown />}>
              Saiba mais
            </Button>
          </ScrollLink>
        </Box>

        <HStack spacing="4" pos="absolute" bottom="80px" left="50%" transform="translateX(-50%)">
          {socialMedias.map(({ Icon, label, url }) => (
            <Link href={url} target="_blank" key={label}>
              <IconButton aria-label={label} variant="unstyled" _hover={{ color: "primary" }} icon={<Icon size={24} />} />
            </Link>
          ))}
        </HStack>
      </Box>

      <Flex
        as="section"
        ref={aboutMeSectionRef}
        id="aboutme"
        direction="column"
        justifyContent="center"
        alignItems="center"
        py="16"
        bg="background-secundary"
      >
        <VStack textAlign="center">
          <Heading color="primary" size="md">
            Sobre
          </Heading>
          <Heading> Um pouco sobre o Francisco Zhou... </Heading>
        </VStack>
        <Flex
          direction={{ sm: "column", md: "row" }}
          w="full"
          maxW="580px"
          pt="8"
          justifyContent="space-between"
          alignItems={{ sm: "center", md: "start" }}
        >
          <Box position="relative" minW="80px" w="80px" h="80px">
            <NextImage
              src="/avatar.jpg"
              alt="Minha foto"
              fill
              style={{ borderRadius: "50%" }}
              sizes=" (max-width: 768px) 100vw,
                      (max-width: 1200px) 50vw,
                      33vw
            "
            />
          </Box>
          <Text
            px={{ sm: "4", md: "0" }}
            color="text-weak"
            m={{ sm: "16px 0", md: "0 0 0 28px" }}
            lineHeight={{ sm: "6", md: "7" }}
            fontSize={{ sm: "15", md: "16" }}
            textAlign={{ sm: "center", md: "unset" }}
          >
            Apaixonado pela área de tecnologia desde criança. Sou atualmente estudante do ensino médio que busca aprender e evoluir para
            oferecer soluções completas para sistemas web, desktop, mobile e servidor.
          </Text>
        </Flex>

        <Grid templateColumns={{ sm: "repeat(1, 1fr)", md: "repeat(2, 1fr)" }} gap="8px" mt="16" maxW="630px" w="full">
          <Box px={{ sm: "4", md: "0" }} w="full" maxW="580px" justifyContent="space-between">
            <Heading size="md" textAlign="center" mb="4">
              Perfil
            </Heading>

            <Box pt="4">
              {profileInfos.map((info) => (
                <Flex
                  justifyContent="center"
                  direction="column"
                  key={info.header}
                  w="full"
                  py="3"
                  transition="200ms"
                  _first={{ pt: 0 }}
                  _hover={{ bgColor: "background-secundary" }}
                >
                  <Heading size="sm">{info.header}:</Heading>
                  <Text color="text-weak" fontSize="15">
                    {info.body}
                  </Text>
                </Flex>
              ))}
            </Box>
          </Box>
          <Box>
            <Heading size="md" textAlign="center">
              Skills
            </Heading>

            <Grid pt="4" gap="4">
              {skills.map(({ name, value }) => (
                <Box key={Math.random()} px="4" h="53px">
                  <Text> {name} </Text>

                  <Box>
                    <HStack h="8px" bgColor="gray.900" mt="4">
                      <Box bgColor="primary" h="8px" w={`${value}%`} />
                      <Popover isOpen placement="top" autoFocus={false}>
                        <PopoverTrigger>
                          <Box />
                        </PopoverTrigger>

                        <PopoverContent mr="20px" mb="8px" w="54px" textAlign="center" bg="background-primary">
                          <PopoverArrow bg="background-primary" />

                          <PopoverBody py="2" px="0" fontSize="13px">
                            {value}%
                          </PopoverBody>
                        </PopoverContent>
                      </Popover>
                    </HStack>
                  </Box>
                </Box>
              ))}
            </Grid>
          </Box>
        </Grid>

        <Divider w="20%" my="8" />
      </Flex>

      <Flex as="section" h="500px">
        asdsa
      </Flex>
    </Box>
  );
}
